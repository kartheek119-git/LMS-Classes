# -*- coding: utf-8 -*-
"""Gemini_AI_Image_Analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10dCFzSEaKaqDSJ42VIHXQsSu9AMKdSgg
"""

import google.generativeai as genai
from google.colab import userdata
GOOGLE_API_KEY=userdata.get('GOOGLE_API_KEY')
genai.configure(api_key=GOOGLE_API_KEY)

import pathlib
import textwrap
from IPython.display import display, Markdown
def to_markdown(text):
  text = text.replace('â€¢', '  *')
  return Markdown(textwrap.indent(text, '> ', predicate=lambda _: True))

import PIL.Image
img = PIL.Image.open('/content/image1.jpg')
img
model = genai.GenerativeModel('gemini-1.5-flash')
response = model.generate_content(["Write a short, engaging blog post based on this picture.  It should include a description of the meal in the photo and talk about my journey meal prepping.", img],
stream=True)
response.resolve()

to_markdown(response.text)

response = model.generate_content(["Generate an accurate caption for this image.", img])
print(response.text)

from PIL import Image
# Open an image
image_path = "/content/girl.jpg"
image = Image.open(image_path)
# Generate a description of the image
response = model.generate_content(["Describe this image in detail.", image])
print(response.text)

response = model.generate_content(["What emotions can you detect in this image?", image])
print(response.text)

image_path = "/content/logo1.jpg"
image = Image.open(image_path)
response = model.generate_content(["Identify the brand or company associated with this logo.",image])
print(response.text)

image_path = "/content/product.jpg"
image = Image.open(image_path)
response = model.generate_content(["What product is shown in this image?", image])
print(response.text)

response = model.generate_content(["Suugest similar product to this one.", image])
print(response.text)

image_path = "/content/invoice.jpg"
image = Image.open(image_path)
response = model.generate_content(["Extract the price from this image.", image])
print(response.text)

response = model.generate_content(["Extract the price, currency, and any discounts from this image.",image])
print(response.text)

image_path = "/content/bicycle.jpg"
image = Image.open(image_path)
response = model.generate_content(["Identify all objects present in this image.", image])
print(response.text)

pip install youtube-transcript-api pytube

from youtube_transcript_api import YouTubeTranscriptApi
def get_youtube_transcript(video_url):
    """Fetches the transcript of a YouTube video."""
    video_id = video_url.split("v=")[1].split("&")[0]
    transcript = YouTubeTranscriptApi.get_transcript(video_id)
    full_text = " ".join([t["text"] for t in transcript])
    return full_text
video_url = "https://www.youtube.com/watch?v=unYDoA8QGH0&list=PLWEpztHwA4ZT2QlHC74oIz4MsawcvE-QX"
video_transcript = get_youtube_transcript(video_url)
print("Transcript:\n", video_transcript[:500])

def summarize_video(text):
    """Summarizes the YouTube video transcript using Gemini AI."""
    model = genai.GenerativeModel("gemini-1.5-flash")
    prompt = f"Summarize the following YouTube video transcript:\n\n{text}"
    response = model.generate_content(prompt)
    return response.text
summary = summarize_video(video_transcript)
print("Summary:\n", summary)

